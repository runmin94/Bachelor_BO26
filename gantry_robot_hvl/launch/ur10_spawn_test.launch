<launch>

      <arg name="model" default="$(find gantry_robot_hvl)/urdf/ur10_crane.urdf"/>
      <arg name="gui" default="false" />


      <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />
      <param name="use_gui" value="$(arg gui)"/>



      <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->
      <node name="crane_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
      <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find gantry_robot_hvl)/rviz/urdf.rviz"/> -->

      <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

      <!-- start this controller -->
      <!-- <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/> -->

      <!-- load other controllers -->
      <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller" />
    
      <rosparam file="$(find gantry_robot_hvl)/config/gantry_robot_control.yaml" command="load"/>
      <!-- <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur10.yaml" command="load"/> -->


     <node name="crane_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="gantry_crane"
        args="joint_state_controller h_beam_controller trolly_controller crane_controller "/>

      <node name="arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="gantry_crane"
        args="arm_controller"/>



      <arg name="world" default="empty"/>
      <arg name="paused" default="false"/>
      <arg name="use_sim_time" default="false"/>
      <arg name="headless" default="false"/>
      <arg name="debug" default="false"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find gantry_robot_hvl)/worlds/world_with_probad.world"/>
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="$(arg headless)"/>
      <arg name="debug" value="$(arg debug)"/>
    </include>

      <node name="gantry_robot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
      args="-urdf -param robot_description -model gantry_robot -robot_namespace gantry_crane" />

  </launch>